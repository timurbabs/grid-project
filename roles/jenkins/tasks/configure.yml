---
- name: Upload plugins
  community.general.jenkins_plugin:
          name: '{{ item }}'
          state: present
          url_username: '{{ jenkins_username }}'
          url_password: '{{ jenkins_password }}'
          url: '{{ jenkins_url }}'
  with_items: '{{ jenkins_plugins }}'
  register: installed_plugins

- name: Jenkins restart fact after plugins installation
  ansible.builtin.set_fact:
          jenkins_restart_required: no

- name: Check if restart is required by any of the plugins
  ansible.builtin.set_fact:
          jenkins_restart_required: yes
  when: item.changed
  with_items: "{{ installed_plugins.results }}"

- name: Restart Jenkins
  ansible.builtin.service:
          name: jenkins
          state: restarted
  when: jenkins_restart_required
  notify: Wait until Jenkins is available

- name: Wait until Jenkins is available
  shell: curl -I -u '{{ jenkins_username }}':'{{ jenkins_password }}' '{{ jenkins_url }}'
  register: result
  until: result.stdout.find("200 OK") != -1
  retries: 12
  delay: 5
  changed_when: false
  args:
    warn: false

- name: Reset the fact after plugins installation to Jenkins
  ansible.builtin.set_fact:
          jenkins_restart_required: no
  when: jenkins_restart_required

- name: Plugin enabling
  community.general.jenkins_plugin:
          name: "{{ item }}"
          state: enabled
          url_username: '{{ jenkins_username }}'
          url_password: '{{ jenkins_password }}'
          url: '{{ jenkins_url }}'
  with_items: "{{ jenkins_plugins }}"

- name: Upload jobs
  community.general.jenkins_job:
    config: "{{ lookup('template', 'templates/jenkins_jobs/{{ item.value }}') }}"
    name: "{{ item.key }}" 
    password: "{{ jenkins_password }}"
    url: "{{ jenkins_url }}"
    user: "{{ jenkins_username }}"
  with_dict: {PreCommit: pre_commit_job.xml, Deployment: deployment_job.xml, Build: build_job.xml}

- name: Upload SSH credentials
  jenkins_script:
    url: "{{ jenkins_url }}"
    script: '{{ lookup("template", "templates/jenkins_groovy/credentials/secret_ssh.groovy") }}'
    args: "{{ item.value }}"
    user: '{{ jenkins_username }}'
    password: '{{ jenkins_password }}'
    validate_certs: false
    timeout: "120"
  with_dict: "{{ ssh_credentials }}"

- name: Upload username and password credentials
  jenkins_script:
    url: "{{ jenkins_url }}"
    script: '{{ lookup("template", "templates/jenkins_groovy/credentials/secret_password.groovy") }}'
    args: "{{ item.value }}"
    user: '{{ jenkins_username }}'
    password: '{{ jenkins_password }}'
    validate_certs: false
    timeout: "120"
  with_dict: "{{ password_credentials }}"

- name: Upload Slaves
  jenkins_script:
    url: "{{ jenkins_url }}"
    script: '{{ lookup("template", "templates/jenkins_groovy/slaves/slave.groovy") }}'
    args: '{{ item.value }}'
    user: '{{ jenkins_username }}'
    password: '{{ jenkins_password }}'
    validate_certs: false
    timeout: "120"
  with_dict: "{{ slaves }}"
