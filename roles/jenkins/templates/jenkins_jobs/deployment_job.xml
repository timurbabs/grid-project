<?xml version="1.0" encoding="UTF-8"?>
<flow-definition plugin="workflow-job@2.41">
	<actions>
		<org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.9.1" />
		<org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.9.1">
			<jobProperties />
			<triggers />
			<parameters>
				<string>VERSION</string>
			</parameters>
			<options />
		</org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
	</actions>
	<description />
	<keepDependencies>false</keepDependencies>
	<properties>
		<hudson.model.ParametersDefinitionProperty>
			<parameterDefinitions>
				<hudson.model.StringParameterDefinition>
					<name>VERSION</name>
					<trim>false</trim>
				</hudson.model.StringParameterDefinition>
			</parameterDefinitions>
		</hudson.model.ParametersDefinitionProperty>
		<org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
			<triggers />
		</org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
	</properties>
	<definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.93">
		<script>pipeline {
    agent {
		label "{{ deployment_label }}"
    }
    environment {
		NEXUS_URL_CONTAINERS = "{{ hostvars.nexus_linux.ansible_host_dns }}:8444"
        NEXUS_CREDENTIAL_ID = "nexus"
        DOCKER_IMAGE_NAME = "petclinic-docker"
        DOCKER_IMAGE_TAG = "latest"
    }
    parameters {
        string(defaultValue: "", description: '', name: 'VERSION')
    }
    stages {
        stage("Docker stop all") {
            steps {
                script {
                    check = sh(returnStdout: true, script: 'docker ps -a -q| wc -l').trim()
                    if (check != '0'){
                        sh 'docker stop $(docker ps -a -q)'
                    }
                }
            }
        }

        stage("Docker pull latest") {
            steps {
                script {
                    sh 'docker pull ${NEXUS_URL_CONTAINERS}/${DOCKER_IMAGE_NAME}-${VERSION}:${DOCKER_IMAGE_TAG}'
                }
            }
        }
        stage("Docker run") {
            steps {
                script {
                    sh 'docker run -d --network host --privileged=true -p 8080:8080 ${NEXUS_URL_CONTAINERS}/${DOCKER_IMAGE_NAME}-${VERSION}:${DOCKER_IMAGE_TAG}'
                }
            }
        }
    }
}</script>
		<sandbox>true</sandbox>
	</definition>
	<triggers />
	<disabled>false</disabled>
</flow-definition>
