---
- name: create ssl directory
  ansible.builtin.file:
      path: "{{ nexus_installation_dir }}/sonatype-work/nexus3/etc/ssl"
      state: directory
      owner: "{{ nexus_os_user }}"
      group: "{{ nexus_os_group }}"

- name: Check ssl exists
  stat:
    path: "{{ nexus_installation_dir }}/sonatype-work/nexus3/etc/ssl/keystore.jks"
  register: stat_result

- name: gen keypair
  shell: "keytool -genkeypair -keystore {{ nexus_installation_dir }}/sonatype-work/nexus3/etc/ssl/keystore.jks -storepass {{ nexus_admin_password }} -keypass {{ nexus_admin_password }} -alias {{ nexus_ssl_name }} -keyalg RSA -keysize 2048 -validity 5000 -dname \"CN=Nexus, OU=Nexus, O=GridDynamics, L=Unspecified, ST=Unspecified, C=US\" -ext \"SAN=DNS:{{ nexus_domain_name }},IP:{{ ansible_host }}\" -ext \"BC=ca:true\""
  ignore_errors: yes
  when: not stat_result.stat.exists

- name: change owner
  ansible.builtin.file:
      path: "{{ nexus_installation_dir }}/sonatype-work/nexus3/etc/ssl/keystore.jks"
      owner: "{{ nexus_os_user }}"
      group: "{{ nexus_os_group }}"

- name: gen cert
  shell: "keytool -printcert -sslserver {{ nexus_domain_name }}:{{ nexus_https_port }} -rfc > {{ nexus_installation_dir }}/sonatype-work/nexus3/etc/ssl/{{ nexus_ssl_name }}.cert"
  ignore_errors: yes
  when: not stat_result.stat.exists

- name: change owner
  ansible.builtin.file:
      path: "{{ nexus_installation_dir }}/sonatype-work/nexus3/etc/ssl/{{ nexus_ssl_name }}.cert"
      owner: "{{ nexus_os_user }}"
      group: "{{ nexus_os_group }}"

- name: gen keypair p12
  shell: "keytool -importkeystore -deststorepass {{ nexus_admin_password }} -srcstorepass {{ nexus_admin_password }} -srckeystore {{ nexus_installation_dir }}/sonatype-work/nexus3/etc/ssl/keystore.jks -destkeystore {{ nexus_installation_dir }}/sonatype-work/nexus3/etc/ssl/{{ nexus_ssl_name }}.p12 -deststoretype PKCS12"
  ignore_errors: yes
  when: not stat_result.stat.exists

- name: change owner
  ansible.builtin.file:
      path: "{{ nexus_installation_dir }}/sonatype-work/nexus3/etc/ssl/{{ nexus_ssl_name }}.p12"
      owner: "{{ nexus_os_user }}"
      group: "{{ nexus_os_group }}"

- name: gen keypair pks12
  shell: "keytool -list -storepass {{ nexus_admin_password }} -keystore {{ nexus_installation_dir }}/sonatype-work/nexus3/etc/ssl/{{ nexus_ssl_name }}.p12 -storetype PKCS12"
  ignore_errors: yes
  when: not stat_result.stat.exists

- name: openssl
  shell: "openssl pkcs12 -password pass:{{ nexus_admin_password }} -nokeys -in {{ nexus_installation_dir }}/sonatype-work/nexus3/etc/ssl/{{ nexus_ssl_name }}.p12 -out {{ nexus_installation_dir }}/sonatype-work/nexus3/etc/ssl/{{ nexus_ssl_name }}.pem"
  when: not stat_result.stat.exists

- name: change owner
  ansible.builtin.file:
      path: "{{ nexus_installation_dir }}/sonatype-work/nexus3/etc/ssl/{{ nexus_ssl_name }}.pem"
      owner: "{{ nexus_os_user }}"
      group: "{{ nexus_os_group }}"

- name: Download ssl sertificate
  ansible.builtin.fetch:
    src: "{{ nexus_installation_dir }}/sonatype-work/nexus3/etc/ssl/{{ nexus_ssl_name }}.pem"
    dest: "~/Documents/"
    flat: yes

- name: openssls
  shell: "openssl pkcs12 -password pass:{{ nexus_admin_password }} -nocerts -nodes -in {{ nexus_installation_dir }}/sonatype-work/nexus3/etc/ssl/{{ nexus_ssl_name }}.p12 -out {{ nexus_installation_dir }}/sonatype-work/nexus3/etc/ssl/{{ nexus_ssl_name }}.key"
  when: not stat_result.stat.exists

- name: change nexus properties
  lineinfile:
    dest: "{{ nexus_installation_dir }}/sonatype-work/nexus3/etc/nexus.properties"
    regexp: "^# nexus-args=.*"
    line: "nexus-args=${jetty.etc}/jetty.xml,${jetty.etc}/jetty-https.xml,${jetty.etc}/jetty-requestlog.xml"
  ignore_errors: yes
  when: not stat_result.stat.exists

- name: add ssl
  lineinfile:
    dest: "{{ nexus_installation_dir }}/sonatype-work/nexus3/etc/nexus.properties"
    line: "ssl.etc=${karaf.data}/etc/ssl"
    create: yes
  when: not stat_result.stat.exists

- name: change nexus properties
  lineinfile:
    dest: "{{ nexus_installation_dir }}/sonatype-work/nexus3/etc/nexus.properties"
    regexp: "^application-port=.*"
    line: "application-port-ssl={{ nexus_https_port }}"
  when: not stat_result.stat.exists

- name: delete old jetty https
  file:
      path: "{{ nexus_installation_dir }}/nexus/etc/jetty/jetty-https.xml"
      state: absent
  when: not stat_result.stat.exists

- name: copy new jetty https
  template:
      src: "jetty-https.j2"
      dest: "{{ nexus_installation_dir }}/nexus/etc/jetty/jetty-https.xml"
  when: not stat_result.stat.exists

- name: change owner
  ansible.builtin.file:
      path: "{{ nexus_installation_dir }}/nexus/etc/jetty/jetty-https.xml"
      owner: "{{ nexus_os_user }}"
      group: "{{ nexus_os_group }}"

- name: trust cert
  shell: "update-ca-trust force-enable"

- name: copy cert
  file:
      src: "{{ nexus_installation_dir }}/sonatype-work/nexus3/etc/ssl/{{ nexus_ssl_name }}.pem"

- name: trust cert
  shell: "update-ca-trust extract"
